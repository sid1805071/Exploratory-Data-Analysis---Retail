# -*- coding: utf-8 -*-
"""Task 3_ EDA - Retail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_lDUlc0FrItY3-lxbwyPfMg65VWtGBw0

# Task 3: Exploratory Data Analysis - Retail

1.   List item
2.   List item

Exploratory Data Analysis - Retail(Beginner level)

Description:-> Performing ‘Exploratory Data Analysis on dataset ‘SampleSuperstore’

Dataset:-> https://bit.ly/3i4rbWl

Done By:-> Siddharth Singh

Language-> Python

# Importing Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
# %matplotlib inline

import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('SampleSuperstore.csv')  #loading dataset
df.head()    #display top 5 rows

df.tail()     #bottom 5 rows

df.shape

df.describe()       #display summary

df.isnull().sum()       #checking null values

df.info()           #information about dataset

df.columns

df.duplicated().sum()

df.nunique()

df['Postal Code'] = df['Postal Code'].astype('object')

df.drop_duplicates(subset=None,keep='first',inplace=True)
df.duplicated().sum()

corr = df.corr()
sns.heatmap(corr,annot=True,cmap='Reds')

df = df.drop(['Postal Code'],axis = 1)    #dropping postal code columns

sns.pairplot(df, hue = 'Ship Mode')

df['Ship Mode'].value_counts()

sns.countplot(x=df['Ship Mode'])

df['Segment'].value_counts()        #valuecounts for segment

sns.pairplot(df,hue = 'Segment')     #plotting pair plot

sns.countplot(x = 'Segment',data = df, palette = 'rainbow')

df['Category'].value_counts()

sns.countplot(x='Category',data=df,palette='tab10')

sns.pairplot(df,hue='Category')

df['Sub-Category'].value_counts()

plt.figure(figsize=(15,12))
df['Sub-Category'].value_counts().plot.pie(autopct='dark')
plt.show()

"""# Observation 1
Maximum are from Binders, Paper, furnishings, Phones, storage, art, accessories and minimum from copiers, machines, suppliers
"""

df['State'].value_counts()

plt.figure(figsize=(15,12))
sns.countplot(x='State',data=df,palette='rocket_r',order=df['State'].value_counts().index)
plt.xticks(rotation=90)
plt.show()

"""# Observation 2
Highest number of buyers are from California and New York
"""

df.hist(figsize=(10,10),bins=50)
plt.show()

"""# Observation 3
Most customers tends to buy quantity of 2 and 3

Discount give maximum is 0 to 20 percent
"""

plt.figure(figsize=(10,8))
df['Region'].value_counts().plot.pie(autopct = '%1.1f%%')
plt.show()

"""# Profit vs Discount"""

fig,ax=plt.subplots(figsize=(20,8))
ax.scatter(df['Sales'],df['Profit'])
ax.set_xlabel('Sales')
ax.set_ylabel('Profit')
plt.show()

sns.lineplot(x='Discount',y='Profit',label='Profit',data=df)
plt.legend()
plt.show()

"""# Observation 4
No correlation between profit and discount

# Profit vs Quantity
"""

sns.lineplot(x='Quantity',y='Profit',label='Profit',data=df)
plt.legend()
plt.show()

df.groupby('Segment')[['Profit','Sales']].sum().plot.bar(color=['pink','blue'],figsize=(8,5))
plt.ylabel('Profit/Loss and sales')
plt.show()

"""# Observation 5
Profit and sales are maximum in consumer segment and minimum in Home Office segment
"""

plt.figure(figsize=(12,8))
plt.title('Segment wise Sales in each Region')
sns.barplot(x='Region',y='Sales',data=df,hue='Segment',order=df['Region'].value_counts().index,palette='rocket')
plt.xlabel('Region',fontsize=15)
plt.show()

"""# Observation 6
Segment wise sales are almost same in every region
"""

df.groupby('Region')[['Profit','Sales']].sum().plot.bar(color=['blue','red'],figsize=(8,5))
plt.ylabel('Profit/Loss and sales')
plt.show()

"""# Observation 7
Profit and sales are maximum in west region and minimum in south region
"""

ps = df.groupby('State')[['Sales','Profit']].sum().sort_values(by='Sales',ascending=False)
ps[:].plot.bar(color=['blue','orange'],figsize=(15,8))
plt.title('Profit/loss & Sales across states')
plt.xlabel('States')
plt.ylabel('Profit/loss & Sales')
plt.show()

"""# Observation 8
high profit is for california, new york

loss is for texas, pennsylvania, Ohio
"""

t_states = df['State'].value_counts().nlargest(10)
t_states

df.groupby('Category')[['Profit','Sales']].sum().plot.bar(color=['yellow','purple'],alpha=0.9,figsize=(8,5))
plt.ylabel('Profit/Loss and sales')
plt.show()

"""# Observation 9
As a business manager, try to find out the weak areas where you can work to make more profit?

Technology and Office Supplies have high profit.

Furniture have less profit
"""

ps = df.groupby('Sub-Category')[['Sales','Profit']].sum().sort_values(by='Sales',ascending=False)
ps[:].plot.bar(color=['red','lightblue'],figsize=(15,8))
plt.title('Profit/loss & Sales across states')
plt.xlabel('Sub-Category')
plt.ylabel('Profit/loss & Sales')
plt.show()

